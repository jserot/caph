-- Example showing to use the [foldl] higher-order wiring primitive to describe
-- a dyadic reduction graph pattern
-- Updated May 7, 2019 - JS

actor add 
  in (a:unsigned<8>, b:unsigned<8>)
  out (c:unsigned<8>)
rules (a,b) -> c
| (x,y) -> x+y
;

stream i1:unsigned<8> from "sample.txt";
stream i2:unsigned<8> from "sample.txt";
stream i3:unsigned<8> from "sample.txt";
stream i4:unsigned<8> from "sample.txt";
stream o:unsigned<8> to "result.txt";

net o = foldl add i1 (i2,i3,i4);
